generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  url        = env("DATABASE_URL")
  provider   = "postgresql"
  extensions = [pgcrypto]
}

enum WorkStatus {
  new
  confirmed
  finished
 
  @@map("work_status")
}

enum UserStatus {
  active
  inactive
 
  @@map("user_status")
}

enum UserType {
  client
  worker
  guest

  @@map("user_type")
}

enum BillingType {
  UZCARD
  HUMO
  MASTERCARD
  VISA

  @@map("billing_type")
}

model User {
  id        String       @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid @id
  fullName  String       @map("full_name") @db.VarChar(255)
  userName  String       @map("user_name") @db.VarChar(255)
  phone     String?      @map("phone") @db.VarChar(15)
  status    UserStatus   @map("status") @default(inactive)
  type      UserType     @map("type") @default(guest)
  createdAt DateTime     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt DateTime?    @map("deleted_at") @db.Timestamp(0)

  house Work[]
  billing Billing[]

  @@map("user")
}

model Work {
  id          String       @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid  @id
  title       String       @map("title") @db.VarChar(255)
  description String       @map("description") @db.Text
  address     String?      @map("address") @db.VarChar(255)
  status      WorkStatus   @map("status") @default(new)
  userId      String       @map("user_id") @db.Uuid
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt   DateTime?    @map("deleted_at") @db.Timestamp(0)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("work")
}

model Billing {
  id          String       @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid  @id
  amount      Int          @map("title") @db.Integer
  description String       @map("description") @db.Text
  address     String?      @map("address") @db.VarChar(255)
  type        BillingType  @map("type")
  userId      String       @map("user_id") @db.Uuid
  workId      String       @map("work_id") @db.Uuid
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime     @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt   DateTime?    @map("deleted_at") @db.Timestamp(0)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("billing")
}